Idee:
1.Die MainControl empfängt alle Pulse Messages
2.Die Pulse Messages werden an die Pucks weitergegeben
3.Die Pucks antworten damit, ob und wie sie bewegt werden können.
(evtl. auch damit, wo sie sich befinden und ob sie meinen es könnte einen Fehler vorliegen.) 

Fragen?
-Fehlerbehandlung, eingene Klasse ohne Pucks zu benutzen
-Fehler an Pucks weitergeben? Kommen manche Fehler nicht eh von einem Puk
-Zwei Pucks in einem Zustand, woher weiß der Puk das es jetzt nicht seine Lichtschranke wahr sondern die des Vorgängers
-Jeder Lichtschrankenzustand hat eigenen Fehler?

Beispiel (zu frühes ankommen der Puks abfangen muss ja möglichen sein, was wenn zwei Puks auf der gleichen strecke sind):
Zwei Pucks warten auf die gleiche Lichtschranke (Befinden sich dich hintereinander). 
Der eine sagt nun Fehler, ich bin zu früh, der andere sagt alles okay. 
Die wird dann durch die auswertung der Puk Signale ausgeglichen? -> siehe PuckEvaluation

Fehler wären (wenn O O die beiden Puks wären (1. und 2.), und X derjenige der beiden der Fehler wirft, aufgrund der Pulse Message der entsprechenden Lichtschranke):
1.  2.  Fehler
--------------
O   O = okay
O   X = Fehler für 2.
X   O = okay
X   X = Fehler für 2.

Nur der vordere Puk kann tatsächlich einen Fehler haben.
 => Auswertung der Puksignale muss wissen, welche Puks sich in welchem Abschnitt in welcher reihenfolge befinden. 
Pucks:
Jeder Puck hat sein eigenes Objekt, mit State Machine zur fehlerbehebung und zum speichern der einzelnen Positionen.
(Anfang, Höhenmessung, Soll aussortiert werden, Hinter Sortierung, In der Übergabe).
