<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <help_text>type=actclass// Uncomment the following line to change the fontsize and font:
// fontsize=14
// fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>9</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>414</x>
      <y>378</y>
      <w>225</w>
      <h>162</h>
    </coordinates>
    <panel_attributes>Context
-
- currentState : &lt;&lt;ptr&gt;&gt;State
- heightReference : int
-
#setState (state : &lt;&lt;ptr&gt;&gt;State) : void
+ registerToChannel( chid : int )
+
+ signalA( void ) : void
+ signalB( void ) : void
+ signalC( void ) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>792</x>
      <y>378</y>
      <w>225</w>
      <h>162</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
State
-
/ / class Context; &lt;- forward declaration
-
+ signalA( void ) : void
+ signalB( void ) : void
+ signalC( void ) : void

bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>630</x>
      <y>441</y>
      <w>180</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
       currentState
       
           1</panel_attributes>
    <additional_attributes>10.0;20.0;180.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>792</x>
      <y>585</y>
      <w>117</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>StateStart
-
- context *Context
-
...A()
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>927</x>
      <y>585</y>
      <w>135</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>StateMeasuring
-
- context *Context
-
+ signalB( void ) : void

bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1080</x>
      <y>585</y>
      <w>180</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>StateNormalPuk
-
- context *Context
-
+ signalC( void ) : void

bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1278</x>
      <y>585</y>
      <w>180</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>StatePukSurface
-
- context *Context
-
+ signalB( void ) : void
+ signalA( void ) : void
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1476</x>
      <y>585</y>
      <w>180</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>StateBitOrFlippedPuk
-
- context *Context
-
...B()
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>837</x>
      <y>531</y>
      <w>27</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>981</x>
      <y>531</y>
      <w>27</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1008</x>
      <y>504</y>
      <w>171</w>
      <h>99</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;170.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1008</x>
      <y>468</y>
      <w>378</w>
      <h>135</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;400.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>414</x>
      <y>144</y>
      <w>225</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>type=actclass
Thread / Client
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>522</x>
      <y>162</y>
      <w>63</w>
      <h>234</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;uses&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;240.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>765</x>
      <y>333</y>
      <w>927</w>
      <h>504</h>
    </coordinates>
    <panel_attributes>Gekapseltes zustandsabhängiges Verhalten
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1008</x>
      <y>432</y>
      <w>576</w>
      <h>171</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;620.0;170.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1125</x>
      <y>171</y>
      <w>153</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>Andere States
nutzen auch
andere/unterschiedliche
Signale (Methoden)

Bsp.:
state.signalA()
state.signalB()
etc.

bg=cyan</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>765</x>
      <y>153</y>
      <w>342</w>
      <h>162</h>
    </coordinates>
    <panel_attributes>TODO: hierachy state machine
TODO: Define signals.
bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>594</x>
      <y>792</y>
      <w>153</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>Um den Folgezustand
bestimmen zukönnen,
müssen die Zustände
den Context kennen.

bg=cyan</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>612</x>
      <y>531</y>
      <w>198</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
context 1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;200.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>594</x>
      <y>531</y>
      <w>414</w>
      <h>180</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;180.0;440.0;180.0;440.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>558</x>
      <y>531</y>
      <w>828</w>
      <h>234</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;240.0;900.0;240.0;900.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>576</x>
      <y>531</y>
      <w>612</w>
      <h>207</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;210.0;660.0;210.0;660.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>540</x>
      <y>531</y>
      <w>1044</w>
      <h>261</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;270.0;1140.0;270.0;1140.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>63</x>
      <y>378</y>
      <w>342</w>
      <h>414</h>
    </coordinates>
    <panel_attributes>Das State-Pattern ermöglicht es einem Objekt 
je nach innerem Zustand ein anderes Verhalten
zu zeigen. 

Implementiert wird das State-Pattern dadurch,
dass man für jeden Zustand eine eigene Klasse 
realisiert. Diese besitzen eine gemeinsame 
Basisklasse.

Für jede *FUNKTION*, deren *VERHALTEN* 
sich ändern soll, wird in der Basisklasse eine 
virtuelle Methode angelegt, die in den abgeleiteten 
Klassen überschrieben wird. Ruft man von außen eine 
Methode des Objekts auf, wird in Wirklichkeit 
eine Methode des gerade aktiven inneren 
Zustand-Objekts aufgerufen. 

Beibt also zu überlegen, welches Verhalten soll das Objekt
nach außen hin (zum Thread) haben?

Thread -&gt; Context.start()
.. warte bis messung fertig
-&gt; Sage dem Thread das Messergebnis (oder  den Fehler)

TODO: Activity diagram

bg=cyan</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
